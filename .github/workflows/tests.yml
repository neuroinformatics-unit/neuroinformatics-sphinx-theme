name: continuous-integration

# This prevents workflows from being run twice on PRs
# ref: https://github.community/t/how-to-trigger-an-action-on-push-or-pull-request-but-not-both/16662
on:
  push:
    branches:
      - main
  pull_request:
  workflow_call:

env:
  COVERAGE_THRESHOLD: 60

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"
      - uses: pre-commit/action@v3.0.0

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11-dev"]
        include:
          - os: macos-latest
            python-version: "3.9"
          - os: windows-latest
            python-version: "3.9"

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install -e .[coverage]
          python -m pip list

      - name: Test Sphinx==4.2
        if: matrix.python-version == '3.7'
        run: |
          python -m pip install sphinx==4.2
          python -m pip list

      - name: Build docs to store
        run: sphinx-build -b html docs/ docs/_build/html --keep-going -w warnings.txt

      - name: Run the tests
        run: pytest --color=yes --cov neuroinformatics_sphinx_theme --cov-branch --cov-report term-missing:skip-covered --cov-fail-under ${{ env.COVERAGE_THRESHOLD }}

      - name: Upload coverage
        if: ${{ always() }}
        run: codecov

  # Generate a profile of the code and upload as an artifact
  profile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools nox

      - name: Generate a profile
        run: |
          nox -s profile
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        with:
          name: profile-results
          path: profile.svg
